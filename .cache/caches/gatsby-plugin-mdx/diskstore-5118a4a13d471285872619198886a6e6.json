{"expireTime":9007200857258653000,"key":"gatsby-plugin-mdx-entire-payload-18aec1357aaa3e6fb6b046c3b3618e6c-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import Header from \"../../../src/components/Layout/Header.jsx\";","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":64,"offset":64},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using Prism React Rendered","position":{"start":{"line":4,"column":4,"offset":69},"end":{"line":4,"column":30,"offset":95},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":66},"end":{"line":4,"column":30,"offset":95},"indent":[]}},{"type":"jsx","value":"<Header />","position":{"start":{"line":6,"column":1,"offset":97},"end":{"line":6,"column":11,"offset":107},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":8,"column":1,"offset":109},"end":{"line":8,"column":7,"offset":115},"indent":[]}},{"type":"inlineCode","value":"prism-react-renderer","position":{"start":{"line":8,"column":7,"offset":115},"end":{"line":8,"column":29,"offset":137},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":109},"end":{"line":8,"column":29,"offset":137},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import React from \"react\";\n\nconst Dump = (props) => (\n  <div\n    style={{\n      fontSize: 20,\n      border: \"1px solid #efefef\",\n      padding: 10,\n      background: \"white\",\n    }}\n  >\n    {Object.entries(props).map(([key, val]) => (\n      <pre key={key}>\n        <strong style={{ color: \"white\", background: \"red\" }}>{key} ðŸ’©</strong>\n        {JSON.stringify(val, \"\", \" \")}\n      </pre>\n    ))}\n  </div>\n);\n\nexport default Dump;","position":{"start":{"line":10,"column":1,"offset":139},"end":{"line":32,"column":4,"offset":580},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Code Blocks\",\"date\":\"2019-09-15T00:00:00.000Z\",\"published\":true}","position":{"start":{"line":35,"column":1,"offset":583},"end":{"line":35,"column":103,"offset":685},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":103,"offset":685}}},"scopeImports":["import Header from \"../../../src/components/Layout/Header.jsx\";","import * as React from 'react'"],"scopeIdentifiers":["Header","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Code Blocks\",\n  \"date\": \"2019-09-15T00:00:00.000Z\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Using Prism React Rendered\"), mdx(Header, {\n    mdxType: \"Header\"\n  }), mdx(\"p\", null, \"Using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prism-react-renderer\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\";\\n\\nconst Dump = (props) => (\\n  <div\\n    style={{\\n      fontSize: 20,\\n      border: \\\"1px solid #efefef\\\",\\n      padding: 10,\\n      background: \\\"white\\\",\\n    }}\\n  >\\n    {Object.entries(props).map(([key, val]) => (\\n      <pre key={key}>\\n        <strong style={{ color: \\\"white\\\", background: \\\"red\\\" }}>{key} \\uD83D\\uDCA9</strong>\\n        {JSON.stringify(val, \\\"\\\", \\\" \\\")}\\n      </pre>\\n    ))}\\n  </div>\\n);\\n\\nexport default Dump;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport Header from \"../../../src/components/Layout/Header.jsx\";\nexport const _frontmatter = {\n  \"title\": \"Code Blocks\",\n  \"date\": \"2019-09-15T00:00:00.000Z\",\n  \"published\": true\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Using Prism React Rendered`}</h2>\n    <Header mdxType=\"Header\" />\n    <p>{`Using `}<inlineCode parentName=\"p\">{`prism-react-renderer`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from \"react\";\n\nconst Dump = (props) => (\n  <div\n    style={{\n      fontSize: 20,\n      border: \"1px solid #efefef\",\n      padding: 10,\n      background: \"white\",\n    }}\n  >\n    {Object.entries(props).map(([key, val]) => (\n      <pre key={key}>\n        <strong style={{ color: \"white\", background: \"red\" }}>{key} ðŸ’©</strong>\n        {JSON.stringify(val, \"\", \" \")}\n      </pre>\n    ))}\n  </div>\n);\n\nexport default Dump;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}